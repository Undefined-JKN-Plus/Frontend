{
  "env": {
    "node": true,
    "es6": true,
    "browser": true
  },
  "parser": "@typescript-eslint/parser",
  "extends": ["react-important-stuff", "next/core-web-vitals", "prettier", "plugin:prettier/recommended", "plugin:@typescript-eslint/recommended"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "modules": true,
      "experimentalObjectRestSpread": true
    }
  },
  "plugins": ["prettier", "react", "unused-imports", "@typescript-eslint"],
  "ignorePatterns": ["node_modules", "build", "dist", "public"],
  "rules": {
    "@next/next/no-img-element": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-namespace": "off",
    "import/newline-after-import": ["error", { "count": 1 }],
    "import/no-anonymous-default-export": [
      "error",
      {
        "allowArray": false,
        "allowArrowFunction": false,
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowCallExpression": true,
        "allowNew": false,
        "allowLiteral": false,
        "allowObject": false
      }
    ],
    "newline-before-return": "error",
    "no-unused-vars": ["off"],
    "@typescript-eslint/no-unused-vars": ["error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }],
    "no-use-before-define": [
      "error",
      {
        "functions": true,
        "classes": true,
        "variables": true,
        "allowNamedExports": false
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": ["export"], "next": ["*"] },
      { "blankLine": "always", "prev": ["*"], "next": ["multiline-const", "multiline-let", "multiline-var", "export"] }
    ],
    "prettier/prettier": ["warn", { "endOfLine": "auto", "singleQuote": true, "jsxSingleQuote": false }],
    "unused-imports/no-unused-imports": "error"
  }
}
